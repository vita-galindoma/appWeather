// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Weather.Data;

namespace Weather.Data.Migrations
{
    [DbContext(typeof(WeatherDbContext))]
    partial class WeatherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Weather.Core.Models.Clouds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CloudsAll")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clouds");
                });

            modelBuilder.Entity("Weather.Core.Models.MainInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FeelsLike")
                        .HasColumnType("float");

                    b.Property<double>("MaxTemp")
                        .HasColumnType("float");

                    b.Property<double>("MinTemp")
                        .HasColumnType("float");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MainInfo");
                });

            modelBuilder.Entity("Weather.Core.Models.Sys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sys");
                });

            modelBuilder.Entity("Weather.Core.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CloudsId")
                        .HasColumnType("int");

                    b.Property<int?>("MainId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SysId")
                        .HasColumnType("int");

                    b.Property<int?>("WindId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CloudsId");

                    b.HasIndex("MainId");

                    b.HasIndex("SysId");

                    b.HasIndex("WindId");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("Weather.Core.Models.Wind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Wind");
                });

            modelBuilder.Entity("Weather.Core.Models.Weather", b =>
                {
                    b.HasOne("Weather.Core.Models.Clouds", "Clouds")
                        .WithMany()
                        .HasForeignKey("CloudsId");

                    b.HasOne("Weather.Core.Models.MainInfo", "Main")
                        .WithMany()
                        .HasForeignKey("MainId");

                    b.HasOne("Weather.Core.Models.Sys", "Sys")
                        .WithMany()
                        .HasForeignKey("SysId");

                    b.HasOne("Weather.Core.Models.Wind", "Wind")
                        .WithMany()
                        .HasForeignKey("WindId");

                    b.Navigation("Clouds");

                    b.Navigation("Main");

                    b.Navigation("Sys");

                    b.Navigation("Wind");
                });
#pragma warning restore 612, 618
        }
    }
}
